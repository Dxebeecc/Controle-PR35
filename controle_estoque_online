<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Painel de Controle de Pentes (Online)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    </head>
<body class="p-6">
    <script>
    // --- CONFIGURAÇÃO ---
    // !!! COLE A URL DO SEU APP DA WEB AQUI DENTRO DAS ASPAS !!!
    const SCRIPT_URL = "https://script.google.com/macros/s/SUA_URL_AQUI/exec";

    // --- VARIÁVEIS GLOBAIS ---
    let materiaPrima = {};
    let estoque = {};
    let receitas = {};
    const pentes = {
        "SC Convencional": ["SC700C", "SC850C", "SC1100C", "SC1400C"],
        "SC Reforçada": ["SC700REF", "SC850REF"],
        "SCW": ["SCW"],
        "HSC": ["HSC850", "HSC1100", "HSC1400"],
        "HP": ["HP700", "HP1100"]
    };

    // --- LÓGICA DO APP ---
    // ... (A maior parte da lógica de renderização, popular, etc. é a mesma) ...
    // ... A grande mudança é como pegamos e atualizamos os dados ...

    async function carregarDadosIniciais() {
        // Mostra um indicador de carregamento
        document.getElementById('painel-detalhes').innerHTML = '<div class="card text-center">Carregando dados da planilha...</div>';
        
        try {
            const response = await fetch(`${SCRIPT_URL}?action=getData`);
            const data = await response.json();
            
            // Transforma os dados da planilha em objetos fáceis de usar
            data.estoque.forEach(item => {
                materiaPrima[item.cod_materia_prima] = { nome: item.nome_peca, tamanho: item.tamanho };
                estoque[item.cod_materia_prima] = item.estoque_atual;
            });

            data.receitas.forEach(item => {
                if (!receitas[item.modelo_pente]) {
                    receitas[item.modelo_pente] = { superior: {}, inferior: {} };
                }
                receitas[item.modelo_pente][item.parte.toLowerCase()][item.cod_materia_prima] = item.qtde_usada;
            });
            
            // Agora que os dados estão carregados, inicializa o painel
            inicializarPainel();

        } catch (error) {
            document.getElementById('painel-detalhes').innerHTML = '<div class="card text-center text-red-500">Erro ao carregar dados. Verifique a URL do script e as permissões da planilha.</div>';
            console.error("Erro:", error);
        }
    }

    async function handleAjusteManual(cod, quantidade) {
        if (!quantidade || isNaN(quantidade)) return;
        
        // Atualiza a interface imediatamente para uma resposta rápida
        estoque[cod] += quantidade;
        renderizarDetalhes(modeloSelect.value);

        try {
            const response = await fetch(`${SCRIPT_URL}?action=updateStock&cod=${cod}&qtde=${quantidade}`);
            const result = await response.json();
            if (result.status !== 'success') {
                // Se der erro, desfaz a alteração e avisa o usuário
                alert("Erro ao salvar na planilha. A alteração foi desfeita.");
                estoque[cod] -= quantidade;
                renderizarDetalhes(modeloSelect.value);
            }
        } catch (error) {
            alert("Erro de conexão. A alteração foi desfeita.");
            estoque[cod] -= quantidade;
            renderizarDetalhes(modeloSelect.value);
        }
    }
    
    // ... O resto do código (funções de renderizar, handleDarBaixa, etc.) precisa ser ajustado
    // para usar `handleAjusteManual` em vez de modificar `estoque` diretamente.

    // A função `handleDarBaixa` chamaria `handleAjusteManual` para cada item da receita.
    // Ex: handleAjusteManual('TUBO-001', -qtdeConsumida);
    
    document.addEventListener('DOMContentLoaded', carregarDadosIniciais);

    // Adapte a função adicionarEventListenersAjuste para chamar a nova função assíncrona
    function adicionarEventListenersAjuste() {
         document.querySelectorAll('button[data-btn-ajuste]').forEach(button => {
            button.onclick = (e) => {
                const cod = e.target.getAttribute('data-btn-ajuste');
                const input = document.querySelector(`input[data-cod-ajuste="${cod}"]`);
                const quantidade = parseInt(input.value);
                handleAjusteManual(cod, quantidade).then(() => {
                    input.value = '';
                });
            };
        });
    }

    // A função inicializarPainel agora é chamada depois que os dados são carregados
    function inicializarPainel() {
        const grupoSelect = document.getElementById('grupo-pente');
        const modeloSelect = document.getElementById('modelo-pente');
        popularGrupos();
        popularModelos(grupoSelect.value);
        renderizarDetalhes(modeloSelect.value);
        // ... resto dos event listeners
    }

</script>
</body>
</html>
